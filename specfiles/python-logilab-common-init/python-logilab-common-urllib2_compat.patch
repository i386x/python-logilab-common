diff --git a/logilab/common/urllib2ext.py b/logilab/common/urllib2ext.py
index 339aec0..e274ce7 100644
--- a/logilab/common/urllib2ext.py
+++ b/logilab/common/urllib2ext.py
@@ -1,7 +1,17 @@
 from __future__ import print_function
 
 import logging
-import urllib2
+import six
+if six.PY3:
+    from urllib.error import HTTPError as urllib2_HTTPError
+    from urllib.request import build_opener as urllib2_build_opener, \
+                               BaseHandler as urllib2_BaseHandler, \
+                               HTTPCookieProcessor as urllib2_HTTPCookieProcessor
+else:
+    from urllib2 import HTTPError as urllib2_HTTPError, \
+                        build_opener as urllib2_build_opener, \
+                        BaseHandler as urllib2_BaseHandler, \
+                        HTTPCookieProcessor as urllib2_HTTPCookieProcessor
 
 import kerberos as krb
 
@@ -17,7 +27,7 @@ def get_negociate_value(headers):
         if match:
             return match.group(1)
 
-class HTTPGssapiAuthHandler(urllib2.BaseHandler):
+class HTTPGssapiAuthHandler(urllib2_BaseHandler):
     """Negotiate HTTP authentication using context from GSSAPI"""
 
     handler_order = 400 # before Digest Auth
@@ -36,7 +46,7 @@ class HTTPGssapiAuthHandler(urllib2.BaseHandler):
     def http_error_401(self, req, fp, code, msg, headers):
         try:
             if self._retried > 5:
-                raise urllib2.HTTPError(req.get_full_url(), 401,
+                raise urllib2_HTTPError(req.get_full_url(), 401,
                                         "negotiate auth failed", headers, None)
             self._retried += 1
             logging.debug('gssapi handler, try %s' % self._retried)
@@ -82,8 +92,8 @@ if __name__ == '__main__':
     # handle cookies
     import cookielib
     cj = cookielib.CookieJar()
-    ch = urllib2.HTTPCookieProcessor(cj)
+    ch = urllib2_HTTPCookieProcessor(cj)
     # test with url sys.argv[1]
     h = HTTPGssapiAuthHandler()
-    response = urllib2.build_opener(h, ch).open(sys.argv[1])
+    response = urllib2_build_opener(h, ch).open(sys.argv[1])
     print('\nresponse: %s\n--------------\n' % response.code, response.info())
